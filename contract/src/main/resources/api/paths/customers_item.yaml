# Contains operations for the /customers/{id} item path
get:
  tags:
    - Customers
  summary: "Find customer by ID"
  description: "Returns a single customer by their unique ID."
  operationId: "getCustomerById"
  parameters:
    - $ref: '../openapi.yaml#/components/parameters/CustomerId' # Düzeltildi
  responses:
    '200':
      description: "Successful operation"
      content:
        application/json:
          schema:
            $ref: '../components/schemas/CustomerDto.yaml'
    '404':
      description: "Customer not found"
put:
  tags:
    - Customers
  summary: "Update an existing customer"
  description: "Updates the information of an existing customer by their ID."
  operationId: "updateCustomer"
  parameters:
    - $ref: '../openapi.yaml#/components/parameters/CustomerId' # Düzeltildi
  requestBody:
    description: "The updated customer object."
    required: true
    content:
      application/json:
        schema:
          $ref: '../components/schemas/CustomerDto.yaml'
  responses:
    '200':
      description: "Customer updated successfully"
      content:
        application/json:
          schema:
            $ref: '../components/schemas/CustomerDto.yaml'
    '404':
      description: "Customer not found"
delete:
  tags:
    - Customers
  summary: "Delete a customer"
  description: "Deletes a customer by their ID."
  operationId: "deleteCustomer"
  parameters:
    - $ref: '../openapi.yaml#/components/parameters/CustomerId' # Düzeltildi
  responses:
    '204':
      description: "Customer deleted successfully"
    '404':
      description: "Customer not found"